name: CI

on:
  push:
    branches: [ master ]
    paths:
      - 'src/**'
      - 'projects/**'
      - 'package*.json'
      - 'tsconfig*.json'
      - 'angular.json'
      - 'karma.conf.js'
      - 'cypress/**'
      - 'playwright.config.*'
      - '.github/workflows/**'
  pull_request:
    branches: [ master ]
    paths:
      - 'src/**'
      - 'projects/**'
      - 'package*.json'
      - 'tsconfig*.json'
      - 'angular.json'
      - 'karma.conf.js'
      - 'cypress/**'
      - 'playwright.config.*'
      - '.github/workflows/**'
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test:
    name: Build & Test (Node ${{ matrix.node }} - ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        node: [20.x]
        os: [ubuntu-latest]
    env:
      CI: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Detect package manager
        id: pm
        run: |
          if [ -f pnpm-lock.yaml ]; then echo "manager=pnpm" >> $GITHUB_OUTPUT; elif [ -f yarn.lock ]; then echo "manager=yarn" >> $GITHUB_OUTPUT; else echo "manager=npm" >> $GITHUB_OUTPUT; fi

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: ${{ steps.pm.outputs.manager }}

      - name: Install dependencies
        run: |
          case "${{ steps.pm.outputs.manager }}" in
            pnpm) corepack enable; pnpm install --frozen-lockfile ;; 
            yarn) yarn --frozen-lockfile ;; 
            npm) npm ci ;; 
          esac

      - name: Lint (if present)
        run: |
          if npm run | grep -q "lint"; then npm run lint; else echo "No lint script"; fi

      - name: Unit Tests (Jest or fallback)
        run: |
          if npm run | grep -q "test"; then npm test -- --ci --runInBand || npm test || true; else echo "No test script"; fi

      - name: Build
        run: |
          if npm run | grep -q "build"; then npm run build; else echo "No build script"; fi

      - name: List dist contents
        if: success() && hashFiles('dist/**') != ''
        run: |
          echo 'Dist files:'
          ls -R dist || true

      - name: Upload dist artifact
        if: success() && hashFiles('dist/**') != ''
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.os }}-node${{ matrix.node }}
          path: dist
          if-no-files-found: ignore

      - name: Security Audit (non blocking)
        run: |
          if [ "${{ steps.pm.outputs.manager }}" = "npm" ]; then npm audit --audit-level=high || true; else echo "Skipping npm audit (non-npm manager)"; fi

      - name: Summary
        run: |
          echo "## CI Summary" >> $GITHUB_STEP_SUMMARY
          echo "Node: ${{ matrix.node }}" >> $GITHUB_STEP_SUMMARY
          echo "Package Manager: ${{ steps.pm.outputs.manager }}" >> $GITHUB_STEP_SUMMARY
          echo "Dist present: $( [ -d dist ] && echo yes || echo no )" >> $GITHUB_STEP_SUMMARY
