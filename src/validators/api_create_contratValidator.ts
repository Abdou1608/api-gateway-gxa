import { z } from "zod";

// Schémas internes avec messages personnalisés
export const contObjectSchema = z.object({
  numcont: z.any().optional().nullable(),
  numtiers: z.any().optional().nullable(),
  frac: z.any().optional().nullable(),
  echpjj: z.any().optional().nullable(),
  echpmm: z.any().optional().nullable(),
  intitule: z.any().optional().nullable(),
  affnouv: z.any().optional().nullable(),
  tacite: z.any().optional().nullable(),
  prelev: z.any().optional().nullable(),
  prelbank: z.any().optional().nullable(),
  jourp: z.any().optional().nullable(),
  querab: z.any().optional().nullable(),
  realis: z.any().optional().nullable(),
  apport1: z.any().optional().nullable().refine(val => val !== undefined, { message: "Le champ apport1 est obligatoire." }),
  apport2: z.any().optional().nullable(),
  tauxrea: z.any().optional().nullable(),
  tauxap1: z.any().optional().nullable(),
  tauxap2: z.any().optional().nullable(),
  gestionn: z.any().optional().nullable(),
  portef: z.any().optional().nullable(),
  remplace: z.any().optional().nullable(),
  remppar: z.any().optional().nullable(),
  derpiece: z.any().optional().nullable(),
  memo: z.any().optional().nullable(),
  ext: z.any().optional().nullable(),
  primann: z.any().optional().nullable(),
  primann1: z.any().optional().nullable(),
  commann: z.any().optional().nullable(),
  commann1: z.any().optional().nullable(),
  totann: z.any().optional().nullable(),
  totann1: z.any().optional().nullable(),
  dateresi: z.any().optional().nullable(),
  debcours: z.any().optional().nullable(),
  fincours: z.any().optional().nullable(),
  debsuiv: z.any().optional().nullable(),
  finsuiv: z.any().optional().nullable(),
  debann: z.any().optional().nullable(),
  finann: z.any().optional().nullable(),
  nbsin: z.any().optional().nullable(),
  impaye: z.any().optional().nullable(),
  impaye1: z.any().optional().nullable(),
  acompte: z.any().optional().nullable(),
  acompte1: z.any().optional().nullable(),
  netimp: z.any().optional().nullable(),
  netimp1: z.any().optional().nullable(),
  lima: z.any().optional().nullable(),
  retrorea: z.any().optional().nullable(),
  retroap1: z.any().optional().nullable(),
  retroap2: z.any().optional().nullable(),
  kprretro: z.any().optional().nullable(),
  kprretem: z.any().optional().nullable(),
  retroemi: z.any().optional().nullable(),
  datdermo: z.any().optional().nullable(),
  modifpar: z.any().optional().nullable(),
  ole: z.any().optional().nullable(),
  txcomm: z.any().optional().nullable(),
  comges: z.any().optional().nullable(),
  polinter: z.any().optional().nullable(),
  polrefus: z.any().optional().nullable(),
  modrev: z.any().optional().nullable(),
  sansquit: z.any().optional().nullable(),
  duree: z.any().optional().nullable(),
  modegest: z.any().optional().nullable(),
  echu: z.any().optional().nullable(),
  echeance: z.any().optional().nullable(),
  ddebpiec: z.any().optional().nullable(),
  dfinpiec: z.any().optional().nullable(),
  hono: z.any().optional().nullable(),
  hono1: z.any().optional().nullable(),
  frprel: z.any().optional().nullable(),
  frprel1: z.any().optional().nullable(),
  datereal: z.any().optional().nullable(),
  histo: z.any().optional().nullable(),
  typretrr: z.any().optional().nullable(),
  typretr1: z.any().optional().nullable(),
  typretr2: z.any().optional().nullable(),
  ptini: z.any().optional().nullable(),
  ptini1: z.any().optional().nullable(),
  pnini: z.any().optional().nullable(),
  pnini1: z.any().optional().nullable(),
  comini: z.any().optional().nullable(),
  comini1: z.any().optional().nullable(),
  agelimit: z.any().optional().nullable(),
  fiscal: z.any().optional().nullable(),
  numproj: z.any().optional().nullable(),
  propproj: z.any().optional().nullable(),
  archive: z.any().optional().nullable(),
  indic: z.any().optional().nullable(),
  nonepur: z.any().optional().nullable(),
  mandat: z.any().optional().nullable(),
  prevsusp: z.any().optional().nullable(),
  prevresi: z.any().optional().nullable(),
  fvahom: z.any().optional().nullable(),
  daterefindice: z.any().optional().nullable(),
  typesignature: z.any().optional().nullable(),
})

const OripieceCode = z.string();
const SitpieceCode = z.string();
const FinpieceCode = z.string();

const piecObjectSchema = z.object({
  contrat: z.number().describe("Le champ contrat est obligatoire." ),
  piece: z.number().describe("Le champ piece est obligatoire." ),
  adhprin: z.number().optional().nullable(),
  codeprod: z.string().optional().nullable(),
  oripiece: OripieceCode.optional().nullable(),
  effet: z.string().optional().nullable(),
  sitpiece: SitpieceCode.optional().nullable(),
  datesit: z.string().optional().nullable(),
  suspens: z.string().optional().nullable(),
  finpiece: FinpieceCode.optional().nullable(),
  datefin: z.string().optional().nullable(),
  entite: z.number().optional().nullable(),
  ciemaj: z.number().optional().nullable(),
  navenant: z.string().optional().nullable(),
  motif: z.string().optional().nullable(),
  globalor: z.string().optional().nullable(),
  globalte: z.string().optional().nullable(),
  preavis: z.number().optional().nullable(),
  memo: z.string().optional().nullable(),
  coeffcom: z.number().optional().nullable(),
  centre: z.string().optional().nullable(),
  heure: z.string().optional().nullable(),
  datemed: z.string().optional().nullable(),
  datcreat: z.string().optional().nullable(),
  cg: z.string().optional().nullable(),
}).strict().describe( "Champs non attendus dans PIEC." );

const poliObjectSchema = z.object({
  Cie: z.any().describe("Le champ Cie est obligatoire." ),
  Contrat: z.any().describe("Le champ Contrat est obligatoire." ),
  Piece: z.any().describe("Le champ Piece est obligatoire." ),
  Police: z.any().describe("Le champ Police est obligatoire." ),

  // Champs facultatifs
  Cieprime: z.any().optional().nullable(),
  Cietaxes: z.any().optional().nullable(),
  Commsup: z.any().optional().nullable(),
  Coutpol: z.any().optional().nullable(),
  Coutpol1: z.any().optional().nullable(),
  external_cie_nomcie: z.any().optional().nullable(),
  PolGroupe: z.any().optional().nullable(),
  Role: z.any().optional().nullable(),
  Tauxcn: z.any().optional().nullable(),
  Tauxcom: z.any().optional().nullable(),
  Tauxcout: z.any().optional().nullable(),
  Tauxpart: z.any().optional().nullable(),
})


const contModelSchema = z.object({
  CONT: contObjectSchema.optional().nullable().refine(v => v !== undefined, { message: "Objet CONT requis dans data" }),
  PIEC: piecObjectSchema.optional().nullable().refine(v => v !== undefined, { message: "Objet PIEC requis dans data" }),
  poli: poliObjectSchema.optional().nullable().refine(v => v !== undefined, { message: "Objet poli requis dans data" }),
});

export const api_create_contratValidator = z.object({
  dossier: z.number().describe("Le dossier doit être un nombre" ),
  produit: z.string().min(1, "champ requis"),
  Effet: z.preprocess(val => (typeof val === "string" || val instanceof Date) ? new Date(val) : val, z.date().describe("Date d'effet invalide" )),
  defaut: z.any().optional(),
  piece: z.any().optional(),
  data:  z.any(),
  BasSecurityContext: z.object({
    _SessionId: z.string().min(1, "champ SessionId est requis"),
  }),
});

